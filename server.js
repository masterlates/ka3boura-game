const express = require('express');
const http = require('http');
const path = require('path');
const { Server } = require('socket.io');

const app = express();
const server = http.createServer(app);
const io = new Server(server);

const PORT = process.env.PORT || 3000;

app.use(express.static(path.join(__dirname, 'public')));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'host.html'));
});

let games = {};

io.on('connection', (socket) => {
  console.log('๐ข ุงุชุตุงู ุฌุฏูุฏ:', socket.id);

  // ุงููุถูู ููุดุฆ ุงููุนุจุฉ
  socket.on('host-create-game', ({ hostName, category, questionCount, questionTime }) => {
    const gameCode = Math.random().toString(36).substr(2, 4).toUpperCase();

    games[gameCode] = {
      hostId: socket.id,
      hostName,
      category,
      questionCount,
      questionTime,
      players: {
        [socket.id]: { name: hostName, score: 0 }
      },
      started: false,
      currentQuestionIndex: 0,
    };

    socket.join(gameCode);
    socket.emit('game-created', { gameCode });

    // ุฃุฑุณู ูุงุฆูุฉ ุงููุงุนุจูู (ูููุง ุงููุถูู) ูููุถูู ููุท
    io.to(socket.id).emit('player-list', Object.values(games[gameCode].players).map(p => p.name));

    console.log(`๐ฎ ูุนุจุฉ ุฌุฏูุฏุฉ: ${gameCode} ุฃูุดุฃูุง ${hostName}`);
  });

  // ูุงุนุจ ููุถู ููุนุจุฉ
  socket.on('player-join-game', ({ playerName, gameCode }) => {
    const game = games[gameCode];
    if (!game) {
      socket.emit('error-message', 'โ ุงูููุฏ ุบูุฑ ุตุญูุญ ุฃู ุงููุนุจุฉ ุบูุฑ ููุฌูุฏุฉ');
      return;
    }

    game.players[socket.id] = { name: playerName, score: 0 };
    socket.join(gameCode);
    socket.emit('joined-success');

    // ุฃุฑุณู ูุงุฆูุฉ ุงููุงุนุจูู ูุฌููุน ุงููุดุงุฑููู
    const playerNames = Object.values(game.players).map(p => p.name);
    io.to(gameCode).emit('player-list', playerNames);

    console.log(`โ ${playerName} ุงูุถู ุฅูู ุงููุนุจุฉ ${gameCode}`);
  });

  // ุงููุถูู ูุจุฏุฃ ุงููุนุจุฉ
  socket.on('host-start-game', ({ gameCode }) => {
    const game = games[gameCode];
    if (!game) return;

    game.started = true;
    game.currentQuestionIndex = 0;
    io.to(gameCode).emit('game-started');

    console.log(`๐ ุจุฏุก ุงููุนุจุฉ: ${gameCode}`);
  });

  // ุงุณุชูุจุงู ุฅุฌุงุจุงุช ุงููุงุนุจูู (ููููู ุชุทููุฑูุง ูุญุณุงุจ ุงูููุงุท)
  socket.on('player-answer', ({ gameCode, answer }) => {
    const game = games[gameCode];
    if (!game) return;

    const player = game.players[socket.id];
    if (!player) return;

    console.log(`๐ฉ ุฅุฌุงุจุฉ ูู ${player.name} ูู ${gameCode}: ${answer}`);

    // ูุซุงู: ุฅุฐุง ุฌูุงุจ ุตุญูุญ ุฒุฏ ููุทุฉ (ูู ูุฐุง ุงููุซุงู: ุฏุงุฆูุงู ุตุญูุญุฉ "ุชููุณ")
    // ููููู ุชุทููุฑูุง ุญุณุจ ุงูุฃุณุฆูุฉ ูุงูุฌูุงุจ ุงูุญูููู
    // if (answer.toLowerCase() === "ุชููุณ") {
    //   player.score += 1;
    // }

    // ุฃุฑุณู ุชุญุฏูุซ ุงูููุงุท ูุฌููุน ุงููุงุนุจูู (ูููู ุชุทููุฑู)
    // io.to(gameCode).emit('score-update', { players: game.players });
  });

  socket.on('disconnect', () => {
    console.log('๐ ูุทุน ุงูุงุชุตุงู:', socket.id);
    // ุญุฐู ุงููุงุนุจ ูู ุฃู ูุนุจุฉ ูุงู ูููุง
    for (const code in games) {
      const game = games[code];
      if (game.players[socket.id]) {
        delete game.players[socket.id];
        io.to(code).emit('player-list', Object.values(game.players).map(p => p.name));
        console.log(`โ ูุงุนุจ ุฎุฑุฌ ูู ุงููุนุจุฉ ${code}`);
        break;
      }
      if (game.hostId === socket.id) {
        // ุงููุถูู ูุทุน ุงูุงุชุตุงู - ูููู ุชุญุฐู ุงููุนุจุฉ
        delete games[code];
        io.to(code).emit('error-message', 'ุชู ุฅูุบุงุก ุงููุนุจุฉ ูุฃู ุงููุถูู ุฎุฑุฌ.');
        console.log(`โ ุงููุถูู ุฎุฑุฌ ูุชู ุญุฐู ุงููุนุจุฉ ${code}`);
        break;
      }
    }
  });
});

server.listen(PORT, () => {
  console.log(`โ ุงูุณูุฑูุฑ ุดุบุงู ุนูู http://localhost:${PORT}`);
});
